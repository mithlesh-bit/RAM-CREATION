<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <title>Details</title>
    <link href="../assets/img/logo.png" rel="icon" />
    <meta content="" name="description" />
    <meta content="" name="keywords" />


    <!-- Favicons -->
    <link href="/assets/img/favicon.png" rel="icon" />
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon" />

    <!-- font owesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

    <!-- Google Fonts -->
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i"
        rel="stylesheet" />

    <!-- Vendor CSS Files -->
    <link href="/assets/vendor/aos/aos.css" rel="stylesheet" />
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
    <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
    <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />

    <!-- Template Main CSS File -->
    <link href="/assets/css/style.css" rel="stylesheet" />

    <!-- =======================================================
  * Template Name: Ninestars
  * Updated: Jan 09 2024 with Bootstrap v5.3.2
  * Template URL: https://bootstrapmade.com/ninestars-free-bootstrap-3-theme-for-creative/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->

    <!-- for alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.1.2/dist/tailwind.min.css" rel="stylesheet">
    <style>
        /* Additional styles to replicate the look from the provided image */
        .drag-area {
            transition: border-color 0.3s;
        }

        .drag-area.dragging {
            border-color: #94a3b8;
        }

        .bg-clicked {
            background-color: #f56565;
            /* This is the Tailwind CSS red-500 color */
        }

        .custom-dark-shadow {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.5);
            /* Example of a darker shadow */
        }
    </style>
</head>

<body class="bg-gray-100 ">
    <!-- ======= Header ======= -->

    <header id="header" class="fixed-top d-flex align-items-center">
        <div class="container d-flex align-items-center justify-content-between">
            <div class="logo" style="display: flex; align-items: center">
                <a href="../../" style="display: flex; align-items: center; text-decoration: none">
                    <h3 style="color: red; margin-left: 10px; margin-top: 5px; font-weight: bold;">
                        Ram Creations
                    </h3>
                </a>
            </div>

            <nav id="navbar" class="navbar">
                <ul>
                    <li><a class="nav-link scrollto active" href="../">Admin</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav>
        </div>
    </header>


    <form id="imageUploadForm" enctype="multipart/form-data" class="mt-6" style="margin-top: 100px;">
        <div
            class="bg-slate-300 mt-3 flex flex-col items-center justify-center p-4 border-2 border-dashed border-red-400 rounded-lg w-3/4 mx-auto">
            <label
                class="border border-red-500 p-4 mb-3 bg-white hover:shadow-lg text-black font-bold py-2 px-4 rounded cursor-pointer transition duration-300 ease-in-out">
                Select images
                <input type="file" name="fileInput" id="fileInput" class="hidden" accept="image/*" multiple
                    onchange="previewFiles()">
            </label>
            <div id="preview" class="flex space-x-2 py-2"></div>
            <button id="uploadBtn" type="submit"
                class="hidden bg-blue-500  text-white font-bold py-2 px-4 rounded cursor-pointer transition duration-300 ease-in-out">
                Upload Images
            </button>
            <p class="text-red-400 text-xs mt-3">Your files will be securely handled by servers</p>
        </div>
    </form>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const uploadBtn = document.getElementById('uploadBtn');

            uploadBtn.addEventListener('click', function () {
                if (this.classList.contains('bg-clicked')) {
                    this.classList.remove('bg-clicked');
                    this.innerText = 'Upload Images'; // Reset text to default
                } else {
                    this.classList.add('bg-clicked');
                    this.innerText = 'Uploading...'; // Change text on click
                }
            });

        });

        const previewContainer = document.getElementById('preview');
        const uploadBtn = document.getElementById('uploadBtn');

        function previewFiles() {
            const files = document.getElementById('fileInput').files;
            const fileArr = Array.from(files);

            // Clear current previews
            previewContainer.innerHTML = '';

            fileArr.forEach(file => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.classList.add('w-16', 'h-16', 'object-cover');
                    previewContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            });

            // Toggle the upload button based on if files are selected
            if (fileArr.length > 0) {
                uploadBtn.classList.remove('hidden');
            } else {
                uploadBtn.classList.add('hidden');
            }
        }

    </script>

    <!-- End Header -->

    <main id="main">

        <div class="row margin-left margin-right">
            <% if (data && data.length> 0) { %> <% data.forEach(data=> { %>
                    <div class="col-lg-3 col-md-6 mb-4 pe-1 shadow-lg custom-dark-shadow">
                        <div class="package-item bg-white position-relative">
                            <img class="img-fluid w-100" src="<%= data.links %>" alt=""
                                style="height: 200px; object-fit: cover" />
                            <div class=" text-light">
                                <div class="mt-0 pt-0">
                                    <div class="d-flex justify-content-between">
                                        <button class="btn btn-danger btn-sm mt-0"
                                            onclick="deleteImage('<%= data._id %>')" style="
                          background-color: rgba(255, 255, 255, 0.8);
                          border: none;
                        ">
                                            <i class="fas fa-trash-alt" style="color: rgb(247, 8, 8)"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- Delete button -->
                            </div>
                        </div>
                    </div>
                    <% }) %>
                        <% } else { %>
                            <h2 class="text-center">No data available</h2>
                            <% } %>
        </div>

    </main>


    <!-- Add this modal HTML at the end of your body -->
    <div class="modal fade" id="imageUploadModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Upload Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Your image upload form goes here -->
                    <form id="imageUploadForm" action="/admin/addData/moredata" method="post"
                        enctype="multipart/form-data">
                        <input type="text" name="theme" id="theme" placeholder="enter Theme" />
                        <input type="text" name="amount" id="amount" placeholder="enter amount" />
                        <label for=" image">Choose Image:</label>
                        <input type="file" name="image" id="image" accept="image/*" />

                        <button type="submit" class="btn btn-primary">Upload</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <a href="#" id="formhai" class="back-to-top d-flex align-items-center justify-content-center"><i
            class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="/assets/vendor/aos/aos.js"></script>
    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/vendor/swiper/swiper-bundle.min.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Template Main JS File -->
    <script src="/assets/js/main.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("imageUploadForm");

            form.addEventListener("submit", function (event) {
                event.preventDefault(); // Prevent the default form submission behavior

                const formData = new FormData(form);

                // Check if files are present
                const files = formData.getAll("fileInput");
                console.log(files); // Check the files in the console
                if (files.length === 0) {
                    console.log("No files selected.");
                    return; // Stop the form submission if no files are selected
                }

                // Assuming dynamicData is needed, extract it from URL
                const dynamicData = extractDynamicData(window.location.href);
                formData.append("dynamicData", dynamicData); // Append dynamic data to the form data

                fetch("/admin/addData/moredata", {
                    method: "POST",
                    body: formData,
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => handleResponse(data))
                    .catch(error => handleError(error));

            });

            function extractDynamicData(url) {
                const parts = url.split("/");
                return parts[parts.length - 1];
            }

            function handleResponse(data) {
                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Post Updated",
                        text: data.message,
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Update Failed",
                        text: data.message,
                    });
                }
            }

            function handleError(error) {
                console.error("Fetch error:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: error.message || "Failed to update the post",
                });
            }

        });

    </script>

    <script>
        function deleteImage(imageId) {
            // Display a confirmation dialog
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make API request to delete image
                    fetch(`/admin/deleteImage/${imageId}`, {
                        method: "DELETE",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    })
                        .then((response) => response.json())
                        .then((data) => {
                            if (data.success) {
                                // If the deletion was successful, show a success message
                                Swal.fire({
                                    icon: "success",
                                    title: "Image Deleted",
                                    text: data.message,
                                }).then(() => {
                                    // Reload the page or update the content dynamically
                                    window.location.reload();
                                });
                            } else {
                                // If there was an error, display an error message
                                Swal.fire({
                                    icon: "error",
                                    title: "Deletion Failed",
                                    text: data.message,
                                });
                            }
                        })
                        .catch((error) => {
                            // Handle errors during the fetch
                            console.error("Fetch error:", error);
                        });
                }
            });
        }
    </script>



</body>

</html>